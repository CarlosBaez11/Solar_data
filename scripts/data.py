import requests
import pandas as pd
import urllib.parse
import time

API_KEY = "{{4ahbKpwQ9FFvjOFnsrMNL2uhr333d3MggmyuOIf}}"
EMAIL = "ieduardo.baez@udea.edu.co"
BASE_URL = "https://developer.nrel.gov/api/nsrdb/v2/solar/psm3-2-2-download.json?"
POINTS = [






'2017844,2017845,2017846,2017847,2017848,2017849,2017850,2017851,2017852,2017853,2017854,2017855,2017856,2017857,2017858,2017859,2017860,2017861,2017862,2017863,2017864,2017865,2017866,2017867,2017868,2017869,2017870,2017871,2017872,2017873,2017874,2017875,2017876,2017877,2017878,2017879,2017880,2017881,2017882,2017883,2017884,2017885,2017886,2017887,2017888,2017889,2017890,2017891,2017892,2017893,2017894,2017895,2017896,2017897,2017898,2017899,2017900,2017901,2017902,2017903,2017904,2017905,2017906,2017907,2017908,2017909,2017910,2017911,2017912,2017913,2017914,2017915,2017916,2017917,2017918,2017919,2017920,2017921,2017922,2017923,2017924,2017925,2017926,2017927,2017928,2017929,2017930,2017931,2017932,2017933,2017934,2017935,2017936,2017937,2017938,2017939,2017940,2017941,2017942,2017943,2017944,2017945,2017946,2017947,2017948,2017949,2017950,2017951,2017952,2017953,2017954,2017955,2017956,2017957,2017958,2017959,2017960,2017961,2017962,2017963,2017964,2017965,2017966,2017967,2017968,2017969,2017970,2017971,2017972,2017973,2017974,2017975,2017976,2017977,2017978,2017979,2017980,2017981,2017982,2017983,2017984,2017985,2017986,2017987,2017988,2017989,2017990,2017991,2017992,2017993,2017994,2017995,2017996,2017997,2017998,2017999,2018000,2018001,2018002,2018003,2018004,2018005,2018006,2018007,2018008,2018009,2018010,2018011,2018012,2018013,2018014,2018015,2018016,2018017,2018018,2018019,2018020,2018021,2018022,2018023,2018024,2018025,2018026,2018027,2018028,2018029,2018030,2018031,2018032,2018033,2018034,2018035,2018036,2018037,2018038,2018039,2018040,2018041,2018042,2018043',

'2018244,2018245,2018246,2018247,2018248,2018249,2018250,2018251,2018252,2018253,2018254,2018255,2018256,2018257,2018258,2018259,2018260,2018261,2018262,2018263,2018264,2018265,2018266'
]

def main():
    input_data = {
        'attributes': 'air_temperature,ghi,relative_humidity,cloud_type,clearsky_dhi,clearsky_dni,dew_point,solar_zenith_angle,total_precipitable_water,wind_speed,surface_pressure',
        'interval': '60',
        
        'api_key': API_KEY,
        'email': EMAIL,
    }
    for name in ['2020']:
        print(f"Processing name: {name}")
        for id, location_ids in enumerate(POINTS):
            input_data['names'] = [name]
            input_data['location_ids'] = location_ids
            print(f'Making request for point group {id + 1} of {len(POINTS)}...')

            if '.csv' in BASE_URL:
                url = BASE_URL + urllib.parse.urlencode(data, True)
                # Note: CSV format is only supported for single point requests
                # Suggest that you might append to a larger data frame
                data = pd.read_csv(url)
                print(f'Response data (you should replace this print statement with your processing): {data}')
                # You can use the following code to write it to a file
                # data.to_csv('SingleBigDataPoint.csv')
            else:
                headers = {
                  'x-api-key': API_KEY
                }
                data = get_response_json_and_handle_errors(requests.post(BASE_URL, input_data, headers=headers))
                download_url = data['outputs']['downloadUrl']
                # You can do with what you will the download url
                print(data['outputs']['message'])
                print(f"Data can be downloaded from this url when ready: {download_url}")

                # Delay for 1 second to prevent rate limiting
                time.sleep(1)
            print(f'Processed')


def get_response_json_and_handle_errors(response: requests.Response) -> dict:
    """Takes the given response and handles any errors, along with providing
    the resulting json

    Parameters
    ----------
    response : requests.Response
        The response object

    Returns
    -------
    dict
        The resulting json
    """
    if response.status_code != 200:
        print(f"An error has occurred with the server or the request. The request response code/status: {response.status_code} {response.reason}")
        print(f"The response body: {response.text}")
        exit(1)

    try:
        response_json = response.json()
    except:
        print(f"The response couldn't be parsed as JSON, likely an issue with the server, here is the text: {response.text}")
        exit(1)

    if len(response_json['errors']) > 0:
        errors = '\n'.join(response_json['errors'])
        print(f"The request errored out, here are the errors: {errors}")
        exit(1)
    return response_json

if __name__ == "__main__":
    main()